@page "/decade"
@using Unplugged.SecurityAnalysis.Valuation

<h3>Decade</h3>

<div class="row">
    <div class="col-12 col-md-3">
        <div class="form-floating mb-3">
            <input type="number" class="form-control" id="initialEarnings" value="@initialEarnings"
                   @oninput="ChangeInitialEarnings">
            <label for="initialEarnings">First Year Earnings</label>
        </div>
    </div>
    <div class="col-12 col-md-3">
        <PercentRangeSlider Label="Growth Rate" @bind-Value="@growthRate" />
    </div>
    <div class="col-12 col-md-3">
        <PercentRangeSlider Label="Discount Rate" @bind-Value="@discountRate" />
    </div>
</div>

<table class="table table-hover">
    <thead>
        <tr>
            <th></th>
            @for (int i = 0; i < years; i++)
            {
                <th>
                    Year @(i + 1)
                </th>
            }
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>
                Earnings
            </th>
            @for (int i = 0; i < years; i++)
            {
                <td>
                    @EarningsForYear(i)
                </td>
            }
        </tr>
        <tr>
            <th>
                Present Value of Earnings
            </th>
            @for (int i = 0; i < years; i++)
            {
                <td>
                    @EarningsPresentValue(i)
                </td>
            }
        </tr>
    </tbody>
</table>

@*

Output:

- Table
    - present value as a percentage of earnings
- sum total of all present values
- earnings multiple
*@

@code {
    const int years = 10;
    private double initialEarnings = 1_000;
    private double growthRate = 20;
    private double discountRate = 10;

    protected override void OnParametersSet()
    {
    }

    private string EarningsForYear(int yearIndex)
    {
        var earnings = initialEarnings * Math.Pow(1 + growthRate / 100.0, yearIndex);
        return earnings.ToString("C0");
    }

    private string EarningsPresentValue(int yearIndex)
    {
        var earnings = initialEarnings * Math.Pow(1 + growthRate / 100.0, yearIndex);
        var presentValue = earnings * Math.Pow(1 + discountRate / 100.0, -(yearIndex + 1));
        return presentValue.ToString("C0");
    }

    private void ChangeInitialEarnings(ChangeEventArgs e)
    {
        initialEarnings = ToDouble(e.Value);
    }

    private static double ToDouble(object? value)
    {
        if (string.IsNullOrWhiteSpace(value as string))
            return 0;
        return Convert.ToDouble(value);
    }
}
