@page "/"
@using Unplugged.SecurityAnalysis.Valuation

<PageTitle>
    Discounted.Cash
</PageTitle>

<form @onsubmit="GetPresentValue" class="row">
    <div class="col-auto">
        <div class="form-floating mb-3">
            <input type="number" class="form-control" id="futureCashFlow" value="@futureCashFlow"
                   @oninput="ChangeFutureCashFlow">
            <label for="futureCashFlow">Future Cash Flow</label>
        </div>
    </div>
    <div class="col-auto">
        <div class="form-floating mb-3">
            <input type="number" class="form-control" id="periods" value="@periods"
                   @oninput="ChangePeriods">
            <label for="periods">Number of Periods</label>
        </div>
    </div>
    <div class="col-auto">
        <label for="discountRateRange" class="form-label">
            Discount Rate
        </label>
        <input type="range" class="form-range" id="discountRateRange" value="@discountRate"
               min="0" max="50" step="0.1"
               @oninput="ChangeDiscountRate">
    </div>
    <div class="col-auto">
        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="discountRate" value="@DiscountRateString"
                   readonly>
            <label for="discountRate">
                Discount Rate
            </label>
        </div>
    </div>
    <div class="col-auto">
        <div class="form-floating mb-3">
            <input class="form-control" id="presentValue" value="@PresentValueString" readonly>
            <label for="presentValue">Present Value</label>
        </div>
    </div>
</form>


@code
{
    private double presentValue;
    private double futureCashFlow = 10_000;
    private double periods = 10;
    private double discountRate = 5;

    private string DiscountRateString => (discountRate / 100.0).ToString("P1");
    private string PresentValueString => presentValue.ToString("N2");

    protected override void OnParametersSet()
    {
        GetPresentValue();
    }

    private void ChangeFutureCashFlow(ChangeEventArgs e)
    {
        futureCashFlow = ToDouble(e.Value);
        GetPresentValue();
    }

    private void ChangePeriods(ChangeEventArgs e)
    {
        periods = ToDouble(e.Value);
        GetPresentValue();
    }

    private void ChangeDiscountRate(ChangeEventArgs e)
    {
        discountRate = ToDouble(e.Value);
        GetPresentValue();
    }

    private void GetPresentValue()
    {
        presentValue = SimpleCashFlowDiscounting.PresentValue(futureCashFlow, periods, discountRate / 100.0);
    }

    private static double ToDouble(object? value)
    {
        if (string.IsNullOrWhiteSpace(value as string))
            return 0;
        return Convert.ToDouble(value);
    }
}